{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","helper.ts","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserById","userId","usersFromServer","find","getTodoId","todosIds","Math","max","App","useState","currentTodos","setCurrentTodos","newTodoTitle","setNewTodoTitle","newTodoUserId","setNewTodoUserId","titleError","setTitleError","selectError","setSelectError","action","method","onSubmit","event","preventDefault","trim","prevTodos","newTodo","htmlFor","type","placeholder","value","onChange","target","selected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ecf0950c.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      key={id}\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />))}\n    </section>\n  );\n};\n","import { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport usersFromServer from './api/users';\n\nexport const getUserById = (userId: number): User | null => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n\nexport const getTodoId = (todos: Todo[]) => {\n  const todosIds = todos.map(todo => todo.id);\n  const newId = Math.max(...todosIds) + 1;\n\n  return newId;\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { getTodoId, getUserById } from './helper';\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [currentTodos, setCurrentTodos] = useState(todos);\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  const [newTodoUserId, setNewTodoUserId] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [selectError, setSelectError] = useState(false);\n\n  const handleTitleChanges = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTodoTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUserChanges = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setNewTodoUserId(event.target.value);\n    setSelectError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!newTodoTitle.trim()) {\n      setTitleError(true);\n    }\n\n    if (!newTodoUserId) {\n      setSelectError(true);\n    }\n\n    if (!newTodoTitle.trim() || !newTodoUserId) {\n      return;\n    }\n\n    setCurrentTodos((prevTodos) => {\n      const newTodo = {\n        id: getTodoId(prevTodos),\n        title: newTodoTitle,\n        completed: false,\n        userId: +newTodoUserId,\n        user: getUserById(+newTodoUserId),\n      };\n\n      return [...prevTodos, newTodo];\n    });\n\n    setNewTodoTitle('');\n    setNewTodoUserId('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            Title:&nbsp;\n            <input\n              id=\"title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={newTodoTitle}\n              onChange={handleTitleChanges}\n            />\n          </label>\n          {titleError && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">\n            User:&nbsp;\n            <select\n              name=\"user\"\n              id=\"user\"\n              data-cy=\"userSelect\"\n              value={newTodoUserId}\n              onChange={handleUserChanges}\n            >\n              <option value=\"0\" selected>Choose a user</option>\n              {usersFromServer.map(({ id, name }) => (\n                <option value={id} key={id}>{name}</option>\n              ))}\n            </select>\n          </label>\n\n          {selectError && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={currentTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}